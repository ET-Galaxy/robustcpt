detected <- future_map(1:100, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=2)$method
}, .options = furrr_options(seed = TRUE))
summary(factor(unlist(detected)))
# Parallel version of the loop
detected <- future_map(1:100, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=1.8)$method
}, .options = furrr_options(seed = TRUE))
summary(factor(unlist(detected)))
n=500
# Parallel version of the loop
detected <- future_map(1:100, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=1.6)$method
}, .options = furrr_options(seed = TRUE))
summary(factor(unlist(detected)))
detected
# Parallel version of the loop
detected <- future_map(1:100, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=1.5)$method
}, .options = furrr_options(seed = TRUE))
summary(factor(unlist(detected)))
# Parallel version of the loop
detected <- future_map(1:100, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=1.2)$method
}, .options = furrr_options(seed = TRUE))
summary(factor(unlist(detected)))
sigma
2.10.1
2.1/0.1
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=1)
# Parallel version of the loop
detected <- future_map(1:100, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=1)$method
}, .options = furrr_options(seed = TRUE))
summary(factor(unlist(detected)))
# Parallel version of the loop
detected <- future_map(1:100, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=0.8)$method
}, .options = furrr_options(seed = TRUE))
summary(factor(unlist(detected)))
# Parallel version of the loop
detected <- future_map(1:50, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=0.8)$method
}, .options = furrr_options(seed = TRUE))
summary(factor(unlist(detected)))
# Example 1: t-distribution with deg of freedom df, no contamination
# Underlying distribution
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.25
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n=500
# Parallel version of the loop
detected <- future_map(1:50, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=0.5)$method
}, .options = furrr_options(seed = TRUE))
summary(factor(unlist(detected)))
# Example 1: t-distribution with deg of freedom df, no contamination
# Underlying distribution
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.25
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n=500
# Parallel version of the loop
detected <- future_map(1:50, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1.4, C2=0.1)$method
}, .options = furrr_options(seed = TRUE))
library(furrr)
plan(multisession)
library(purrr)
# Example 1: t-distribution with deg of freedom df, no contamination
# Underlying distribution
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.25
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n=500
# Parallel version of the loop
detected <- future_map(1:50, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.5)$method
}, .options = furrr_options(seed = TRUE))
# Example 1: t-distribution with deg of freedom df, no contamination
# Underlying distribution
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.25
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n=500
# Parallel version of the loop
detected <- future_map(1:50, function(i) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.1)$method
}, .options = furrr_options(seed = TRUE))
detected
library(purrr)
# Example 1: t-distribution with deg of freedom df, no contamination
# Underlying distribution
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.25
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n=500
# Parallel version of the loop
detected<-c()
for (i in 1:50) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.1)$method
}
summary(factor(detected))
n=500
# Parallel version of the loop
detected<-c()
for (i in 1:50) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.01)$method
}
summary(factor(detected))
n=500
# Parallel version of the loop
detected<-c()
for (i in 1:50) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.05)$method
}
summary(factor(detected))
# Parallel version of the loop
detected<-c()
for (i in 1:50) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.03)$method
}
summary(factor(detected))
# Parallel version of the loop
detected<-c()
for (i in 1:60) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.04)$method
}
summary(factor(detected))
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.2
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n=500
# Type I error
detected<-c()
for (i in 1:60) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)$method
}
summary(factor(detected))
n=1200
# Type I error
detected<-c()
for (i in 1:40) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)$method
}
summary(factor(detected))
devtools::load_all()
devtools::load_all()
roxygen2::roxygenise()
roxygen2::roxygenise()
data<-c(1,3,4,5,6)
OnlineMedian(data)
?OnlineMedian
m <- OnlineMedian()
Rcpp::loadModule("OnlineMedian", TRUE)
m<-OnlineMedian()
mOnlineMedian()
OnlineMedian()
sigma=sqrt(df/(df-2))
alpha=0.1
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n=1200
# Type I error
detected<-c()
for (i in 1:40) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)$method
}
summary(factor(detected))
OnlineMedian()
m <- OnlineMedian()
for (val in c(1,4,5,6,2)){}
for (val in c(1,4,5,6,2)){m$insert(val)
cat("Inserted:", sprintf("%6.3f", val), " Median:", sprintf("%6.3f", m$median()), "\n")}
for (val in rnorm(1000)){m$insert(val)
cat("Inserted:", sprintf("%6.3f", val), " Median:", sprintf("%6.3f", m$median()), "\n")}
for (val in rnorm(10000)){m$insert(val)
cat("Inserted:", sprintf("%6.3f", val), " Median:", sprintf("%6.3f", m$median()), "\n")}
# online median improvements in computation time
set.seed(12)
start.time <- Sys.time()
datum<-norm(10000)
# online median improvements in computation time
set.seed(12)
start.time <- Sys.time()
datum<-rnorm(10000)
for (i in 1:10000){
median(datum[1:i])
}
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
# online median improvements in computation time
set.seed(12)
start.time <- Sys.time()
datum<-rnorm(10000)
for (i in 1:10000){
OnlineMedian(datum[1:i])
}
# online median improvements in computation time
set.seed(12)
start.time <- Sys.time()
datum<-rnorm(10000)
m<-OnlineMedian()
for (val in datum){
m$insert(val)
cat("Inserted:", sprintf("%6.3f", val), " Median:", sprintf("%6.3f", m$median()), "\n")
}
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
# online median improvements in computation time
set.seed(12)
start.time <- Sys.time()
datum<-rnorm(10000)
m<-OnlineMedian()
for (val in datum){
m$insert(val)
m$median()
}
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
# online median improvements in computation time
set.seed(12)
start.time <- Sys.time()
datum<-rnorm(10000)
for (i in 1:10000){
median(datum[1:i])
}
# m<-OnlineMedian()
# for (val in datum){
#   m$insert(val)
#   m$median()
# }
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
# Large signal
n<-1500
for (kap in c(8*sigma, 4*sigma, 2*sigma, sigma, 0.75*sigma, 0.5*sigma)){
detected<-c()
locations<-c()
for (i in 1:10){
online_data<-change_point_model(n, cpt=500, kappa=1)
test<-rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)
detected[i]<-test$method
locations[i]<-test$location
}
summary(factor(detected))
hist(locations, breaks = 500:1500)
}
locations
hist(locations)
# Large signal
n<-1500
for (kap in c(8*sigma, 4*sigma, 2*sigma, sigma, 0.75*sigma, 0.5*sigma)){
detected<-c()
locations<-c()
for (i in 1:10){
online_data<-change_point_model(n, cpt=500, kappa=1)
test<-rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)
detected[i]<-test$method
locations[i]<-test$location
}
summary(factor(detected))
locations
hist(locations)
}
factor(detected)
# Large signal
n<-1500
for (kap in c(8*sigma, 4*sigma, 2*sigma, sigma, 0.5*sigma, 0.25*sigma)){
detected<-c()
locations<-c()
for (i in 1:20){
online_data<-change_point_model(n, cpt=500, kappa=1)
test<-rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)
detected[i]<-test$method
locations[i]<-test$location
}
summary(factor(detected))
locations
hist(locations, length.out = 21)
}
warnings()
matrix()
ma<-matrix()
ma[1,2]=1
matrix(nrow=6,ncol=30)
# Large signal
n<-1500
locations<-matrix(nrow=6,ncol=30)
size_kappa<-c(8*sigma, 4*sigma, 2*sigma, sigma, 0.5*sigma, 0.25*sigma)
j<-0
for (kap in size_kappa){
j<-j+1
for (i in 1:30){
online_data<-change_point_model(n, cpt=500, kappa=1)
test<-rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)
locations[i,j]<-test$location
}
}
locations
# Large signal
n<-1500
locations<-matrix(nrow=6,ncol=30)
size_kappa<-c(8*sigma, 4*sigma, 2*sigma, sigma, 0.5*sigma, 0.25*sigma)
j<-0
for (kap in size_kappa){
j<-j+1
for (i in 1:30){
online_data<-change_point_model(n, cpt=500, kappa=1)
test<-rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)
locations[j,i]<-test$location
}
}
locations
unlist(locations)
flatten(locations)
summary(locations)
vector(locations)
as.vector(locations)
sum(as.vector(locations)<500)
hist(as.vector(locations))
hist(as.vector(locations),breaks=0:900)
hist(as.vector(locations),breaks=0:900, title="kappa=1")
sigma
sigma
# Power to detect changepoint
# Large signal
n<-1500
locations<-matrix(nrow=6,ncol=30)
size_kappa<-c(8*sigma, 4*sigma, sigma, 0.25*sigma, 0.125*sigma)
j<-0
for (kap in size_kappa){
j<-j+1
for (i in 1:50){
online_data<-change_point_model(n, cpt=500, kappa=kap)
test<-rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)
locations[j,i]<-test$location
}
}
locations
# Power to detect changepoint
# Large signal
n<-1500
locations<-matrix(nrow=6,ncol=50)
size_kappa<-c(8*sigma, 4*sigma, sigma, 0.25*sigma, 0.125*sigma)
j<-0
for (kap in size_kappa){
j<-j+1
for (i in 1:50){
online_data<-change_point_model(n, cpt=500, kappa=kap)
test<-rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)
locations[j,i]<-test$location
}
}
locations
locations[1:5,]
locations
locations<-locations[1:5,]
boxplot(locations)
boxplot(t(locations))
save(locations, "locations.csv")
save(locations)
save(locations, file="")
save(locations, file="./julia")
save(locations, file=".")
write.csv(locations)
write.csv(locations, file="v2.csv")
sum(as.vector(locations)<500)
20/250
library(purrr)
# Example 1: t-distribution with deg of freedom df, no contamination
# Underlying distribution
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.15
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n<-2000
# Type I error
detected<-c()
for (i in 1:100) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)$method
}
summary(factor(detected))
library(purrr)
# Example 1: t-distribution with deg of freedom df, no contamination
# Underlying distribution
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.2
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n<-2000
# Type I error
detected<-c()
for (i in 1:200) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)$method
}
summary(factor(detected))
summary(factor(detected))
library(purrr)
# Example 1: t-distribution with deg of freedom df, no contamination
# Underlying distribution
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.2
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
library(robustcpt)
library(purrr)
# Example 1: t-distribution with deg of freedom df, no contamination
# Underlying distribution
epsilon=0
df=2.1
sigma=sqrt(df/(df-2))
alpha=0.2
v=2
mechanism_df<-partial(contaminated_sample_t, df=df,epsilon=epsilon)
n<-2000
# Type I error
detected<-c()
for (i in 1:100) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.035)$method
}
detected
summary(detected)
summary(factor(detected))
n<-2000
# Type I error
detected<-c()
for (i in 1:100) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.04)$method
}
summary(factor(detected))
# Type I error
detected<-c()
for (i in 1:100) {
online_data <- change_point_model(n, mechanism=mechanism_df, cpt=NA)
detected[i]<- rumedian_v(online_data, v=2, sigma=sigma, alpha=alpha, C1=1, C2=0.04)$method
}
summary(factor(detected))
v<-[604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 16.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 213.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 2.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 9.0 604.0 604.0 604.0 604.0 5.0 604.0 604.0 604.0 604.0 600.0 604.0 604.0 604.0 604.0 2.0 604.0; 605.0 604.0 604.0 604.0 604.0 604.0 54.0 604.0
v<-c(604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 16.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 213.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 2.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 604.0 9.0 604.0 604.0 604.0 604.0 5.0 604.0 604.0 604.0 604.0 600.0 604.0 604.0 604.0 604.0 2.0 604.0; 605.0 604.0 604.0 604.0 604.0 604.0 54.0 604.0
data<-matrix(c(
604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 16.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 213.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 2.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 9.0, 604.0, 604.0, 604.0, 604.0, 5.0, 604.0, 604.0, 604.0, 604.0, 600.0, 604.0, 604.0, 604.0, 604.0, 2.0, 604.0,
605.0, 604.0, 604.0, 604.0, 604.0, 604.0, 54.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 605.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 269.0, 604.0, 604.0, 604.0, 604.0, 604.0, 14.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 605.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 25.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 127.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0, 604.0,
607.0, 614.0, 610.0, 608.0, 611.0, 610.0, 608.0, 609.0, 607.0, 81.0, 609.0, 610.0, 608.0, 609.0, 610.0, 21.0, 610.0, 608.0, 609.0, 610.0, 605.0, 610.0, 610.0, 18.0, 607.0, 610.0, 34.0, 608.0, 609.0, 609.0, 610.0, 610.0, 609.0, 606.0, 608.0, 609.0, 607.0, 610.0, 607.0, 608.0, 610.0, 608.0, 606.0, 612.0, 610.0, 610.0, 606.0, 607.0, 608.0, 102.0, 608.0, 611.0, 609.0, 608.0, 607.0, 608.0, 418.0, 610.0, 611.0, 611.0, 31.0, 608.0, 608.0, 609.0, 605.0, 610.0, 609.0, 609.0, 611.0, 91.0, 608.0, 609.0, 610.0, 608.0, 607.0, 606.0, 608.0, 609.0, 609.0, 144.0, 611.0, 220.0, 607.0, 607.0, 610.0, 608.0, 609.0, 608.0, 608.0, 610.0, 608.0, 609.0, 608.0, 609.0, 609.0, 610.0, 608.0, 610.0, 608.0, 610.0,
727.0, 657.0, 643.0, 611.0, 1327.0, 716.0, 767.0, 783.0, 14.0, 742.0, 787.0, 649.0, 669.0, 992.0, 662.0, 657.0, 626.0, 655.0, 659.0, 703.0, 654.0, 715.0, 832.0, 678.0, 637.0, 724.0, 744.0, 636.0, 633.0, 635.0, 829.0, 715.0, 713.0, 711.0, 776.0, 883.0, 706.0, 665.0, 635.0, 727.0, 646.0, 653.0, 707.0, 686.0, 2.0, 674.0, 635.0, 632.0, 651.0, 62.0, 724.0, 781.0, 649.0, 767.0, 651.0, 4.0, 702.0, 1141.0, 662.0, 54.0, 741.0, 795.0, 785.0, 641.0, 649.0, 717.0, 634.0, 850.0, 928.0, 852.0, 638.0, 674.0, 747.0, 1092.0, 632.0, 848.0, 637.0, 619.0, 626.0, 696.0, 881.0, 692.0, 758.0, 657.0, 879.0, 665.0, 660.0, 717.0, 653.0, 699.0, 748.0, 654.0, 766.0, 820.0, 728.0, 948.0, 692.0, 664.0, 648.0, 711.0,
1355.0, 44.0, -1.0, 1859.0, -1.0, 1058.0, 1509.0, 827.0, -1.0, -1.0, 2258.0, 1124.0, -1.0, -1.0, -1.0, 630.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1466.0, 838.0, 786.0, -1.0, 2515.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 33.0, -1.0, -1.0, 1173.0, 766.0, -1.0, -1.0, -1.0, -1.0, 909.0, 984.0, 267.0, -1.0, -1.0, 1515.0, -1.0, 638.0, -1.0, 1416.0, -1.0, 1549.0, -1.0, -1.0, 2866.0, -1.0, -1.0, -1.0, 636.0, 879.0, 662.0, 2827.0, 1561.0, 784.0, -1.0, -1.0, -1.0, 617.0, -1.0, 1590.0, -1.0, -1.0, -1.0, 1555.0, 1472.0, 2054.0, -1.0, -1.0, 1828.0, -1.0, -1.0, 83.0, -1.0, 2242.0, -1.0, -1.0, 1987.0, 1405.0, -1.0, -1.0, 1570.0, 639.0, -1.0
), nrow = 5, byrow = TRUE)
data
boxplot(data)
boxplot(t(data))
boxplot(t(data)>0)
boxplot(t(data))
?replace
replace(data,-1,1)
replace(data,data==-1,1)
replace(data,data==-1,3001)
boxplot(t(replace(data,data==-1,3001)))
sum(replace(data,data==-1,3001)<500)
30/500
