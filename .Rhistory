contaminated_sample(50)
# Constant determined as 2.25
s=50
v=2
delta=0.1
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:20000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=50
v=2
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
online_data1
delta=0.1
epsilon=0
mean_dist<-c()
const<-c()
vareps<-max(epsilon, log(1/delta)/s)
vareps
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
rume(online_data1,epsilon=0,delta=delta)
mean_dist[trial]
s=50
v=2
delta=0.1
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:20000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta)
mean_dist
quantile(mean_dist,1-delta)
sum(is.na(mean_dist))
which.max(is.na(mean_dist))
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=50
v=2
delta=0.1
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:20000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
rume(rep(5,1000))
rume(rep(5,1000))
rume(rep(5,1000))
rume(rep(5,1000))
s=50
v=2
delta=0.1
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:20000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
if (!is.numeric(mean_dist)){
online_data1
online_data2
}
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
!is.numeric(NA)
!is.numeric(NULL)
mean_dist
is.na(mean_dist)
sum(is.na(mean_dist))
which.max(is.na(mean_dist))
mean_dist[4653]
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=200
v=2
delta=0.1
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:20000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
const
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=200
v=2
delta=0.05
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:20000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
const
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=200
v=2
delta=0.0005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:40000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
const
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=200
v=2
delta=0.00005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:100000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
const
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=140
v=2
delta=0.00005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:100000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=160
v=2
delta=0.00005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:100000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=180
v=2
delta=0.00005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:100000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=190
v=2
delta=0.00005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:100000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=196
v=2
delta=0.00005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:100000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
10*log(0.00005)
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=240
v=2
delta=0.000005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:200000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=280
v=2
delta=0.000005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:200000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
# Cutoff (Easy case - no contamination)
# Constant determined as 2.25
s=280
v=2
delta=0.000005
epsilon=0
mean_dist<-c()
const<-c()
for (trial1 in 1:1){
for (trial in 1:200000){
online_data1=contaminated_sample(s,epsilon=epsilon)
online_data2=contaminated_sample(s,epsilon=epsilon)
vareps<-max(epsilon, log(1/delta)/s)
mean_dist[trial]<-abs(rume(online_data1,epsilon=0,delta=delta)-rume(online_data2,epsilon=0,delta=delta))
}
theoretical_bound<-2*sqrt(3)*max(vareps^(1-1/v),sqrt(log(1/delta)/s))
const[trial1]<-quantile(mean_dist,1-delta)/theoretical_bound
}
const
